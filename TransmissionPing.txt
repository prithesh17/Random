8# Experiment No: 3
# TRANSMISSION OF PING MESSAGE
# Aim: Implement transmission of ping messages/trace route over a network topology
# consisting of 6 nodes and find the number of packets dropped due to congestion.

set ns [new Simulator]
set nf [open lab2.nam w]
$ns namtrace-all $nf
set tf [open lab2.tr w]
$ns trace-all $tf

set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
set n5 [$ns node]

$ns duplex-link $n0 $n4 1005Mb 1ms DropTail
$ns duplex-link $n1 $n4 50Mb 1ms DropTail
$ns duplex-link $n2 $n4 2000Mb 1ms DropTail
$ns duplex-link $n3 $n4 200Mb 1ms DropTail
$ns duplex-link $n4 $n5 1Mb 1ms DropTail

set p1 [new Agent/Ping]
$ns attach-agent $n0 $p1
$p1 set packetSize_ 50000
$p1 set interval_ 0.0001

set p2 [new Agent/Ping]
$ns attach-agent $n1 $p2

set p3 [new Agent/Ping]
$ns attach-agent $n2 $p3
$p3 set packetSize_ 30000
$p3 set interval_ 0.00001

set p4 [new Agent/Ping]
$ns attach-agent $n3 $p4

set p5 [new Agent/Ping]
$ns attach-agent $n5 $p5

$ns queue-limit $n0 $n4 5
$ns queue-limit $n2 $n4 3
$ns queue-limit $n4 $n5 2

Agent/Ping instproc recv {from rtt} {
    $self instvar node_
    puts "node [$node_ id] received answer from $from with round trip time $rtt msec"
}

$ns connect $p1 $p5
$ns connect $p3 $p4

proc finish {} {
    global ns nf tf
    $ns flush-trace
    close $nf
    close $tf
    exec nam lab2.nam &
    exit 0
}

$ns at 0.1 "$p1 send"
$ns at 0.2 "$p1 send"
$ns at 0.3 "$p1 send"
$ns at 0.4 "$p1 send"
$ns at 0.5 "$p1 send"
$ns at 0.6 "$p1 send"
$ns at 0.7 "$p1 send"
$ns at 0.8 "$p1 send"
$ns at 0.9 "$p1 send"
$ns at 1.0 "$p1 send"

$ns at 0.1 "$p3 send"
$ns at 0.2 "$p3 send"
$ns at 0.3 "$p3 send"
$ns at 0.4 "$p3 send"
$ns at 0.5 "$p3 send"
$ns at 0.6 "$p3 send"
$ns at 0.7 "$p3 send"
$ns at 0.8 "$p3 send"
$ns at 0.9 "$p3 send"
$ns at 1.0 "$p3 send"

$ns at 2.0 "finish"
$ns run


awk file :

BEGIN {
    drop = 0;
}

{
    if ($1 == "d") {
        drop++;
    }
}

END {
    printf("Total number of %s packets dropped due to congestion = %d\n", $5, drop);
}


This script simulates the transmission of ping messages over a network topology consisting of 6 nodes using NS-2. It sets up various duplex links between the nodes with different bandwidths and queue limits to simulate congestion scenarios. Ping agents are attached to nodes to send ping messages to each other.

Here's a breakdown of what the code does:

1. It defines a simulation using NS-2.
2. Six nodes (n0 to n5) are created.
3. Duplex links are established between the nodes with specified bandwidths and delays.
4. Ping agents are attached to nodes to send ping messages to each other.
5. Queue limits are set on certain links to simulate congestion.
6. A Tcl procedure is defined to handle the reception of ping messages.
7. Events are scheduled to start sending ping messages and to finish the simulation.
8. The simulation is run.

The AWK script is used to parse the trace file generated by the simulation and count the number of dropped packets due to congestion. It prints out the total number of packets dropped at the end.

You would save the AWK script in a separate file with a ".awk" extension and run it on the trace file generated by the NS-2 simulation to analyze the results.